setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\edited data\\2014')
dat=read.csv('y1.csv',as.is=T)
ind=which(colnames(dat)%in%c('X','Y'))
coord=dat[,ind]
#combine with theta
order1=c(3,2,4,1)
theta.m1=theta.m[,order1]
colnames(theta.m1)=paste0('gr',1:4)
theta2=cbind(coord,theta.m1)
theta3=theta2[,c('X','Y','gr1')]
#get coordinates to retain
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\grass')
coord.sel=read.csv('coord select.csv')
cond=coord.sel$fire.treat%in%c('C','3x','6x')
coord.sel1=coord.sel[cond,]
theta4=merge(theta3,coord.sel1,all.y=T); dim(coord.sel1); dim(theta4)
#get coordinate system (following instructions from https://www.slideshare.net/vitor_vasconcelos/dados-espaciais-em-r)
EPSG=make_EPSG()
ind=grep('SIRGAS 2000 / UTM zone 22S',EPSG$note)
sirgas.2000=EPSG[ind,'prj4']
sirgas.2000=paste(sirgas.2000,'+datum=WGS84')
#get grass raster
grama <- raster('Grass2015.tif')
grama1 = raster::projectRaster(grama,crs=sirgas.2000)
grama2 <- raster::as.data.frame(grama1,xy=T)
cond=!is.na(grama2$Grass2015) & grama2$Grass2015>0
grama2$Grass2015[cond]=1
#summarize grass data for each pixel of theta4
theta4$pgrass=NA
for (i in 1:nrow(theta4)){
print(i)
x2=(grama2$x-theta4$X[i])^2
y2=(grama2$y-theta4$Y[i])^2
dist1=sqrt(x2+y2)
cond=dist1<25
if (sum(cond)>0){
grama3=grama2[cond,]
theta4$pgrass[i]=mean(grama3$Grass2015,na.rm=T)
}
}
cond=is.na(theta4$pgrass)
theta4$pgrass[cond]=NA
#create scatterplot of proportion of grass and relative abundance of cluster 1
png('grass analysis scatter.png',width=700,height=700)
par(mfrow=c(1,1),mar=c(5,5,1,1))
rango=c(0,1)
plot(theta4$gr1,theta4$pgrass,xlim=rango,ylim=rango,
xlab='Relative abundance cluster 1',
ylab='Proportion of grass',cex.lab=3,cex.axis=1.5,cex=1.5)
lines(rango,rango,col='grey')
dev.off()
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\GIS TAN')
experim.fire <- st_read("Polygon_A_B_C_D.shp")
cond=is.na(experim.fire$Nome) | experim.fire$Nome!='Parcela C'
experim.fire1=experim.fire[cond,]
#get coordinate system (following instructions from https://www.slideshare.net/vitor_vasconcelos/dados-espaciais-em-r)
experim.fire2=st_transform(experim.fire1,crs=sirgas.2000)
tmp1=st_coordinates(experim.fire2)
#look at spatial distribution
xrango=range(tmp1[,'X'])
yrango=range(tmp1[,'Y'])
diffx=diff(xrango)
diffy=diff(yrango)
#plot proportion of grass
cond=!is.na(theta4$pgrass)
res1=ggplot() +
geom_tile(data = theta4[cond,],alpha=0.8,
aes(x = X, y = Y,fill = pgrass))+
scale_fill_gradient2(low = "white", mid = "red",high='purple',
limits=c(0,1),midpoint=0.5)+
guides(fill=FALSE) +
ggtitle('Proportion of grass') +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.text=element_text(size=16),
plot.title = element_text(size=30,hjust = 0.5),
plot.margin=grid::unit(c(0,0,0,0), "mm"))+
geom_sf(data=experim.fire2,colour='black',fill=NA) +
annotate("text", x = 350500, y = 8553350, label = "C",size=9) +
annotate("text", x = 350000, y = 8553350, label = "3x",size=9) +
annotate("text", x = 349500, y = 8553350, label = "6x",size=9) +
scale_size_identity()
res1
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\grass')
ggsave(file='grass analysis pgrass.jpeg',
res1,width=7,height=(diffy/diffx)*7)
res2=ggplot() +
geom_tile(data = theta4[cond,],alpha=0.8,
aes(x = X, y = Y,fill = gr1))+
scale_fill_gradient2(low = "white", mid = "red",high='purple',
limits=c(0,1),midpoint=0.5)+
guides(fill=FALSE) +
ggtitle('Relative abundance cluster 1') +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.text=element_text(size=16),
plot.title = element_text(size=30,hjust = 0.5),
plot.margin=grid::unit(c(0,0,0,0), "mm"))+
geom_sf(data=experim.fire2,colour='black',fill=NA) +
annotate("text", x = 350500, y = 8553350, label = "C",size=9) +
annotate("text", x = 350000, y = 8553350, label = "3x",size=9) +
annotate("text", x = 349500, y = 8553350, label = "6x",size=9) +
scale_size_identity()
res2
ggsave(file='grass analysis gr1.jpeg',
res2,width=7,height=(diffy/diffx)*7)
res2=ggplot() +
geom_tile(data = theta4[cond,],alpha=0.8,
aes(x = X, y = Y,fill = gr1))+
scale_fill_gradient2(low = "white", mid = "red",high='purple',
limits=c(0,1),midpoint=0.5)
ggsave(file='grass analysis legend.jpeg', res2,width=7,height=(diffy/diffx)*7)
rm(list=ls(all=TRUE))
#get data
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\edited data\\2014')
# setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\edited data\\2018')
dat=read.csv('y1.csv',as.is=T)
ind=which(colnames(dat)%in%c('X','Y'))
coord=dat[,ind]
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\results 2014')
# setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\results 2018')
theta.m=read.csv('theta.m.csv',as.is=T)
order1=c(3,2,4,1)
theta.m=theta.m[,order1]
nomes=paste0('comm',1:4)
colnames(theta.m)=nomes
theta=cbind(coord,theta.m)
#get coordinates to retain
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simplex')
coord.sel=read.csv('coord select.csv')
theta1=merge(theta,coord.sel,all.y=T); dim(coord.sel); dim(theta1)
theta2=aggregate(cbind(comm1,comm2,comm3,comm4)~fire.treat+edge,data=theta1,mean)
write.csv(theta2,'data 2014.csv',row.names=F)
# write.csv(theta2,'data 2018.csv',row.names=F)
rm(list=ls(all=TRUE))
#get data
# setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\edited data\\2014')
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\edited data\\2018')
dat=read.csv('y1.csv',as.is=T)
ind=which(colnames(dat)%in%c('X','Y'))
coord=dat[,ind]
#get parameter estimates
# setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\results 2014')
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\results 2018')
theta.m=read.csv('theta.m.csv',as.is=T)
order1=c(3,2,4,1)
theta.m=theta.m[,order1]
nomes=paste0('comm',1:4)
colnames(theta.m)=nomes
theta=cbind(coord,theta.m)
#get coordinates to retain
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simplex')
coord.sel=read.csv('coord select.csv')
theta1=merge(theta,coord.sel,all.y=T); dim(coord.sel); dim(theta1)
theta2=aggregate(cbind(comm1,comm2,comm3,comm4)~fire.treat+edge,data=theta1,mean)
# write.csv(theta2,'data 2014.csv',row.names=F)
write.csv(theta2,'data 2018.csv',row.names=F)
rm(list=ls(all=TRUE))
#get 2014 data
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simplex')
a2014=read.csv('data 2014.csv')
# soma=apply(a2014[,paste0('comm',1:4)],1,sum)
# hist(soma)
#edit these data
a2014$comm34=a2014$comm3+a2014$comm4
ind=which(colnames(a2014)%in%c('comm1','comm2','comm34'))
colnames(a2014)[ind]=c('comm1.14','comm2.14','comm34.14')
ind=which(colnames(a2014)%in%c('comm3','comm4'))
a2014a=a2014[,-ind]
#add whatever is missing to sum to 1 into comm34.14
soma=apply(a2014a[,c('comm1.14','comm2.14','comm34.14')],1,sum)
a2014a$comm34.14=a2014a$comm34.14+(1-soma)
apply(a2014a[,c('comm1.14','comm2.14','comm34.14')],1,sum)
#get 2018 data
a2018=read.csv('data 2018.csv')
#edit these data
a2018$comm34=a2018$comm3+a2018$comm4
ind=which(colnames(a2018)%in%c('comm1','comm2','comm34'))
colnames(a2018)[ind]=c('comm1.18','comm2.18','comm34.18')
ind=which(colnames(a2018)%in%c('comm3','comm4'))
a2018a=a2018[,-ind]
#combine these datasets and make plot
fim=merge(a2014a,a2018a,all=T); dim(a2014a); dim(a2018a); dim(fim)
aux=data.frame(fire.treat=c('C','1x','3x','6x'),
cores=c('green','orange','red','purple'))
fim1=merge(fim,aux,all=T); dim(fim); dim(fim1)
#function to convert into barycentric coordinates
get.stuff=function(k){
x=k[2]+k[3]*(1/2)
y=k[3]*sqrt(3)/2
c(x,y)
}
#get tick marks
seq1=seq(from=0,to=1,by=0.2)
tmp1=data.frame(comm1=seq1,comm2=1-seq1,comm34=0)
tmp2=data.frame(comm1=seq1,comm2=0,     comm34=1-seq1)
tmp3=data.frame(comm1=0   ,comm2=seq1,  comm34=1-seq1)
ticks=rbind(tmp1,tmp2,tmp3)
png('graph1_2_34.png',width=500,height=1000)
par(mfrow=c(2,1),mar=c(1,1,4,1))
tipo=c('edge','interior')
titulo=paste0('Forest ',tipo)
for (i in 1:2){
plot(NA,NA,xlim=c(-0.1,1.1),ylim=c(0,1.05*sqrt(3)/2),
xlab='',ylab='',xaxt='n',yaxt='n',main=titulo[i],
cex.main=3)
text(c(-0.08,1.08,0.5),c(0,0,1.03*sqrt(3)/2),c(1,2,'3+4'),cex=3)
lines(c(0,1,1/2,0),c(0,0,sqrt(3)/2,0))
#draw ticks
for (j in 1:nrow(ticks)){
coord1=ticks[j,c('comm1','comm2','comm34')]
coord1a=get.stuff(unlist(coord1))
points(x=coord1a[1],
y=coord1a[2],cex=1,pch=19)
}
#draw grid
for (j in 1:nrow(ticks)){
coord1=ticks[j,c('comm1','comm2','comm34')]
coord1a=get.stuff(unlist(coord1))
if (sum(coord1!=1)==3){
if (coord1[1]!=0 & coord1[2]!=0) coord2=coord1[c(1,3,2)]
if (coord1[2]!=0 & coord1[3]!=0) coord2=coord1[c(3,2,1)]
if (coord1[1]!=0 & coord1[3]!=0) coord2=coord1[c(2,1,3)]
coord2a=get.stuff(unlist(coord2))
lines(x=c(coord1a[1],coord2a[1]),
y=c(coord1a[2],coord2a[2]),col='grey')
}
}
#draw data
cond=fim1$edge==tipo[i]
fim2=fim1[cond,]
for (j in 1:nrow(fim2)){
coord1=fim2[j,c('comm1.14','comm2.14','comm34.14')]
coord1a=get.stuff(unlist(coord1))
coord2=fim2[j,c('comm1.18','comm2.18','comm34.18')]
coord2a=get.stuff(unlist(coord2))
points(x=c(coord1a[1],coord2a[1]),
y=c(coord1a[2],coord2a[2]),
col=fim2$cores[j],cex=3,pch=19)
arrows(x0=coord1a[1], y0=coord1a[2],
x1=coord2a[1], y1=coord2a[2],col=fim2$cores[j],lwd=3,lty=2)
}
if (i==1) legend(-0.08,1.03*sqrt(3)/2,
col=aux$cores,
aux$fire.treat,
lwd=3,cex=2)
}
dev.off()
rm(list=ls())
#3 communities
ncomm=3
height=1:30
nheight=length(height)
phi=matrix(NA,ncomm,nheight)
media1=c(20,15,10)
sd1=5
max1=dnorm(media1,media1,sd=sd1)
phi[1,]=0.8*dnorm(height,mean=media1[1],sd=sd1)/max1[1]
phi[2,]=0.8*dnorm(height,mean=media1[2],sd=sd1)/max1[2]
phi[3,]=0.8*dnorm(height,mean=media1[3],sd=sd1)/max1[3]
range(phi)
par(mfrow=c(3,1),mar=rep(1,4))
for (i in 1:ncomm) plot(phi[i,],type='h')
#export true parameters
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simul\\fake data')
write.csv(phi,'phi3.csv',row.names=F)
#------------------------------------------------
#5 communities
ncomm=5
height=1:30
nheight=length(height)
phi=matrix(NA,ncomm,nheight)
media1=c(25,20,15,10,5)
sd1=2
max1=dnorm(media1,media1,sd=sd1)
phi[1,]=0.8*dnorm(height,mean=media1[1],sd=sd1)/max1[1]
phi[2,]=0.8*dnorm(height,mean=media1[2],sd=sd1)/max1[2]
phi[3,]=0.8*dnorm(height,mean=media1[3],sd=sd1)/max1[3]
phi[4,]=0.8*dnorm(height,mean=media1[4],sd=sd1)/max1[4]
phi[5,]=0.8*dnorm(height,mean=media1[5],sd=sd1)/max1[5]
range(phi)
par(mfrow=c(5,1),mar=rep(1,4))
for (i in 1:ncomm) plot(phi[i,],type='h')
#export true parameters
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simul\\fake data')
write.csv(phi,'phi5.csv',row.names=F)
rm(list=ls(all=TRUE))
set.seed(421)
#get theta and phi
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simul\\fake data')
ncomm=5
nome=paste0(c('phi','theta'),ncomm,'.csv')
phi=read.csv(nome[1])
theta=read.csv(nome[2])
nloc=nrow(theta)
nspp=ncol(phi)
nomes.col=paste0('y',1:ncomm)
theta1=theta[,nomes.col]
#get n
n2=matrix(100,nloc,nspp)
#generate actual observations y
y=matrix(0,nloc,nspp)
array1=array(NA,dim=c(nloc,nspp,ncomm,2))
for (i in 1:nloc){
print(i)
for (j in 1:nspp){
tmp=rmultinom(1,size=n2[i,j],prob=theta1[i,])
for (k in 1:ncomm){
tmp1=rbinom(1,size=tmp[k],prob=phi[k,j])
array1[i,j,k,1]=tmp1
array1[i,j,k,2]=tmp[k]-tmp1
y[i,j]=y[i,j]+tmp1
}
}
}
mean(y<=n2)
image(data.matrix(y/n2))
#make sure things make sense
teste=apply(array1[,,,1],c(1,2),sum)
unique(y-teste)
teste=apply(array1,c(1,2),sum)
unique(n2-teste)
#make nice output table
colnames(y)=paste('spp',1:nspp,sep='')
#export results
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simul\\fake data')
nome=paste('fake data y',ncomm,'.csv',sep='')
write.csv(y,nome,row.names=F)
nome=paste('fake data n',ncomm,'.csv',sep='')
write.csv(n2,nome,row.names=F)
rm(list=ls(all=TRUE))
set.seed(421)
#get theta and phi
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simul\\fake data')
ncomm=3
nome=paste0(c('phi','theta'),ncomm,'.csv')
phi=read.csv(nome[1])
theta=read.csv(nome[2])
nloc=nrow(theta)
nspp=ncol(phi)
nomes.col=paste0('y',1:ncomm)
theta1=theta[,nomes.col]
#get n
n2=matrix(100,nloc,nspp)
#generate actual observations y
y=matrix(0,nloc,nspp)
array1=array(NA,dim=c(nloc,nspp,ncomm,2))
for (i in 1:nloc){
print(i)
for (j in 1:nspp){
tmp=rmultinom(1,size=n2[i,j],prob=theta1[i,])
for (k in 1:ncomm){
tmp1=rbinom(1,size=tmp[k],prob=phi[k,j])
array1[i,j,k,1]=tmp1
array1[i,j,k,2]=tmp[k]-tmp1
y[i,j]=y[i,j]+tmp1
}
}
}
mean(y<=n2)
image(data.matrix(y/n2))
#make sure things make sense
teste=apply(array1[,,,1],c(1,2),sum)
unique(y-teste)
teste=apply(array1,c(1,2),sum)
unique(n2-teste)
#make nice output table
colnames(y)=paste('spp',1:nspp,sep='')
#export results
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simul\\fake data')
nome=paste('fake data y',ncomm,'.csv',sep='')
write.csv(y,nome,row.names=F)
nome=paste('fake data n',ncomm,'.csv',sep='')
write.csv(n2,nome,row.names=F)
rm(list=ls(all=TRUE))
#get coordinates for each treatment
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simplex')
coord=read.csv('coord select.csv')
coord1=aggregate(X~fire.treat,data=coord,mean)
coord1$X=floor(coord1$X)
cond=coord1$fire.treat=='C'
coord1$X[cond]=350450
coord1$X=coord1$X-25
yuni=unique(coord$Y)
combo=expand.grid(X=coord1$X,Y=yuni)
coord2=merge(combo,coord1,all=T); dim(combo); dim(coord2)
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\CHM')
rm(list=ls(all=TRUE))
#get coordinates for each treatment
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\simplex')
coord=read.csv('coord select.csv')
coord1=aggregate(X~fire.treat,data=coord,mean)
coord1$X=floor(coord1$X)
cond=coord1$fire.treat=='C'
coord1$X[cond]=350450
coord1$X=coord1$X-25
yuni=unique(coord$Y)
combo=expand.grid(X=coord1$X,Y=yuni)
coord2=merge(combo,coord1,all=T); dim(combo); dim(coord2)
#calculate distance to forest edge
maxy=max(coord2$Y)
coord2$d.edge=abs(coord2$Y-maxy)
#output results
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\CHM')
write.csv(coord2,'CHM transects.csv',row.names=F)
rm(list=ls(all=TRUE))
library(ggplot2)
library('sf')
library('gstat')
library('sp')
#CHM transects
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\CHM')
CHM.transects=read.csv('CHM transects.csv')
trat=unique(CHM.transects$fire.treat)
setwd('U:\\independent studies\\LIDAR\\LidarLDA_MS\\GIS TAN')
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\GIS TAN')
rm(list=ls(all=TRUE))
library(ggplot2)
library('sf')
library('gstat')
library('sp')
#CHM transects
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\CHM')
CHM.transects=read.csv('CHM transects.csv')
trat=unique(CHM.transects$fire.treat)
#get river shapefile and coordinates of transects
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\GIS TAN')
river1 <- st_read("rio_tanguro_dissp.shp")
experim.fire <- st_read("Polygon_A_B_C_D.shp")
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\CHM\\2014 edited data')
dat14=read.csv('TAN 2014 edited.csv')
cond=dat14$nobs==25000; mean(cond)
dat14=dat14[cond,c('X','Y','q99')]
colnames(dat14)[ncol(dat14)]='q99.14'
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\CHM\\2018 edited data')
dat18=read.csv('TAN 2018 edited.csv')
cond=dat18$nobs==25000; mean(cond)
dat18=dat18[cond,c('X','Y','q99')]
colnames(dat18)[ncol(dat18)]='q99.18'
fim=merge(dat14,dat18,all=T); dim(dat14); dim(dat18); dim(fim)
#interpolate results for q99.14
tmp=fim
coordinates(tmp)=c('X','Y')
cond=!is.na(tmp$q99.14)
tmp1=tmp[cond,]
tmp2=gstat::idw(formula=q99.14~1,tmp1,
newdata=tmp,idp=2.0)
fim$q99.14.interp=tmp2$var1.pred
cond=!is.na(tmp$q99.18)
tmp1=tmp[cond,]
tmp2=gstat::idw(formula=q99.18~1,tmp1,
newdata=tmp,idp=2.0)
fim$q99.18.interp=tmp2$var1.pred
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\CHM')
xrango=range(fim$X)
yrango=range(fim$Y)
yrango[2]=8554325
diffx=diff(xrango)
diffy=diff(yrango)
anos=c(14,18)
max1=max(fim[,c('q99.14.interp','q99.18.interp')],na.rm=T)
setwd('U:\\independent studies\\LIDAR Tanguro\\LidarLDA_MS\\CHM')
xrango=range(fim$X)
yrango=range(fim$Y)
yrango[2]=8554325
diffx=diff(xrango)
diffy=diff(yrango)
anos=c(14,18)
max1=max(fim[,c('q99.14.interp','q99.18.interp')],na.rm=T)
for (j in 1:2){
nomes=paste0('q99.',anos[j],'.interp')
fim$response=fim[,nomes]
minx=xrango[1]
maxy=yrango[2]
res=ggplot() +
geom_tile(data = fim, alpha = 1,aes(x = X, y = Y,fill = response)) +
scale_fill_gradient2(low = "cyan", mid = "red",
high='purple',limits=c(0,max1),
midpoint=max1/2,
na.value="transparent") +
guides(fill=FALSE) +
annotate("text",x=mean(xrango),y=maxy,label='Agricult. field',
size=5,col='brown',fontface=3) +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.text=element_text(size=16),
plot.title = element_text(size=30,hjust = 0.5),
plot.margin=grid::unit(c(0,0,0,0), "mm"))+
geom_sf(data=river1,colour='darkblue') +
geom_sf(data=experim.fire,colour='black',fill=NA) +
xlim(xrango) +
ylim(c(8552220,yrango[2])) +
annotate("text", x = 350500, y = 8552950, label = "C",size=9) +
annotate("text", x = 350000, y = 8552950, label = "3x",size=9) +
annotate("text", x = 349500, y = 8552950, label = "6x",size=9) +
annotate("text", x = 348500, y = 8552950, label = "1x",size=9) +
scale_size_identity()
for (ooo in 1:length(trat)){
cond=CHM.transects$fire.treat==trat[ooo] &
CHM.transects$Y%in%range(CHM.transects$Y)
trans1=CHM.transects[cond,]
res=res+geom_line(data=trans1,mapping=aes(x=X,y=Y),
linetype=3)
}
ggsave(file=paste('maps',anos[j],'.jpeg',sep=''), res,width=7,height=(diffy/diffx)*7)
}
