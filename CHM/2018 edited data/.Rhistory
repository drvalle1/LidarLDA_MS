#CHM transects
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM')
CHM.transects=read.csv('CHM transects.csv')
#only retain data in transects
fim1a=merge(res,CHM.transects,all.y=T); dim(fim1a); dim(CHM.transects)
fim1a$cluster=as.factor(fim1a$cluster)
#plot results together
trat=c('C','1x','3x','6x')
cores=c('green','red','cyan','orange')
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM')
for (i in 1:length(trat)){
cond=fim1a$fire.treat==trat[i]
fim2=fim1a[cond,]
res=ggplot(fim2,aes(fill=cluster,y=theta,x=d.edge))+
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values=cores)+
xlab("")+ylab('')+
guides(fill=FALSE)
ggsave(file=paste('compare thetas ',trat[i],'.jpeg',sep=''),
res,width=7,height=5)
}
rm(list=ls(all=TRUE))
#get data
setwd('U:\\independent studies\\LIDAR Tanguro\\edited data\\2014')
dat=read.csv('y1.csv',as.is=T)
ind=which(colnames(dat)%in%c('X','Y'))
coord=dat[,ind]
#get theta
setwd('U:\\independent studies\\LIDAR Tanguro\\results 2014')
theta.m=read.csv('theta.m.csv',as.is=T)[,1:4]
colnames(theta.m)=paste0('cluster',1:4)
#change format
res=numeric()
for (i in 1:4){
tmp=cbind(coord,theta.m[,i],i)
res=rbind(res,tmp)
}
colnames(res)=c('X','Y','theta','cluster')
#CHM transects
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM')
CHM.transects=read.csv('CHM transects.csv')
#only retain data in transects
fim1a=merge(res,CHM.transects,all.y=T); dim(fim1a); dim(CHM.transects)
fim1a$cluster=as.factor(fim1a$cluster)
#plot results together
trat=c('C','1x','3x','6x')
cores=c('green','red','cyan','orange')
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM')
for (i in 1:length(trat)){
cond=fim1a$fire.treat==trat[i]
fim2=fim1a[cond,]
res=ggplot(fim2,aes(fill=cluster,y=theta,x=d.edge))+
geom_bar(position="fill", stat="identity")+
scale_fill_manual(values=cores)+
xlab("")+ylab('')+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20)) +
guides(fill=FALSE)
ggsave(file=paste('compare thetas ',trat[i],'.jpeg',sep=''),
res,width=7,height=5)
}
dev.off()
dev.off()
dev.off()
rm(list=ls(all=TRUE))
library(ggplot2)
library('sf')
#CHM transects
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM')
CHM.transects=read.csv('CHM transects.csv')
trat=unique(CHM.transects$fire.treat)
#get river shapefile and coordinates of transects
setwd('U:\\independent studies\\LIDAR\\GIS TAN')
river1 <- st_read("rio_tanguro_dissp.shp")
contour1 <- st_read("contour1.shp")
transect=read.csv('coord transects.csv',as.is=T)
#get divino data
setwd('U:\\independent studies\\LIDAR\\GIS TAN\\divino')
experim.fire <- st_read("Polygon_A_B_C_D.shp")
#get 2014 CHM data
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM\\2014 edited data')
dat14=read.csv('TAN 2014 edited.csv')
cond=dat14$nobs==10000; mean(cond)
dat14=dat14[cond,c('X','Y','q99')]
colnames(dat14)[ncol(dat14)]='q99.14'
#get 2018 CHM data
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM\\2018 edited data')
dat18=read.csv('TAN 2018 edited.csv')
cond=dat18$nobs==10000; mean(cond)
dat18=dat18[cond,c('X','Y','q99')]
colnames(dat18)[ncol(dat18)]='q99.18'
#combine datasets
fim=merge(dat14,dat18,all=T); dim(dat14); dim(dat18); dim(fim)
fim$dif1=fim$q99.18-fim$q99.14
#look at spatial distribution
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM')
xrango=range(fim$X)
yrango=range(fim$Y)
yrango[2]=8554325
diffx=diff(xrango)
diffy=diff(yrango)
anos=c(14,18)
tmp=max(abs(range(fim$dif1)))
zrango=c(-tmp,tmp)
fim$response=fim$dif1
minx=xrango[1]
maxy=yrango[2]
res=ggplot() +
geom_tile(data = fim, alpha = 1,aes(x = X, y = Y,fill = response)) +
scale_fill_gradient2(low = "red", mid = "white",high='blue',limits=c(zrango[1],zrango[2]),midpoint=0) +
guides(fill=FALSE) +
# ggtitle(j) +
annotate("text",x=mean(xrango),y=maxy,label='Agricult. field',
size=5,col='brown',fontface=3) +
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
axis.text=element_text(size=16),
plot.title = element_text(size=30,hjust = 0.5),
plot.margin=grid::unit(c(0,0,0,0), "mm"))+
geom_sf(data=river1,colour='darkblue') +
geom_sf(data=experim.fire,colour='black',fill=NA) +
# geom_sf(data=contour1,colour='grey') +
xlim(xrango) +
ylim(c(8552220,yrango[2])) +
# geom_line(aes(x=transect$x,y = transect$y,
#               group = transect$transect), color = "darkred")
annotate("text", x = 350500, y = 8552950, label = "C",size=9) +
annotate("text", x = 350000, y = 8552950, label = "3x",size=9) +
annotate("text", x = 349500, y = 8552950, label = "6x",size=9) +
annotate("text", x = 348500, y = 8552950, label = "1x",size=9) +
scale_size_identity() #+
#geom_hline(yintercept=8554250)
for (ooo in 1:length(trat)){
cond=CHM.transects$fire.treat==trat[ooo] &
CHM.transects$Y%in%range(CHM.transects$Y)
trans1=CHM.transects[cond,]
res=res+geom_line(data=trans1,mapping=aes(x=X,y=Y),
linetype=3)
}
res
ggsave(file='maps diff.jpeg', res,width=7,height=(diffy/diffx)*7)
rm(list=ls(all=TRUE))
#get 2014 CHM data
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM\\2014 edited data')
dat14=read.csv('TAN 2014 edited.csv')
cond=dat14$nobs==10000; mean(cond)
dat14=dat14[cond,c('X','Y','q99')]
colnames(dat14)[ncol(dat14)]='q99.14'
#get 2018 CHM data
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM\\2018 edited data')
dat18=read.csv('TAN 2018 edited.csv')
cond=dat18$nobs==10000; mean(cond)
dat18=dat18[cond,c('X','Y','q99')]
colnames(dat18)[ncol(dat18)]='q99.18'
#combine datasets
fim=merge(dat14,dat18,all=T); dim(dat14); dim(dat18); dim(fim)
#CHM transects
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM')
CHM.transects=read.csv('CHM transects.csv')
#only retain data in transects
fim1a=merge(fim,CHM.transects,all.y=T); dim(fim1a); dim(CHM.transects)
#plot results together
trat=c('C','1x','3x','6x')
cores=c('green','orange','red','purple')
res=numeric()
plot(NA,NA,xlim=range(fim1a$d.edge),
ylim=c(0,max(fim1a$q99.14)))
for (i in 1:length(trat)){
cond=fim1a$fire.treat==trat[i]
fim2=fim1a[cond,]
fim3=fim2[order(fim2$d.edge),]
points(fim3$d.edge,fim3$q99.14,col=cores[i])
smooth1=lowess(x=fim3$d.edge,y=fim3$q99.14,f=1/3)
lines(smooth1$x,smooth1$y,col=cores[i],lwd=2)
fim3$q99.14s=smooth1$y
res=rbind(res,fim3)
}
#plot results separately
trat=c('C','1x','3x','6x')
cores=c('green','orange','red','purple')
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM')
for (i in 1:length(trat)){
nome=paste('compare CHM ',trat[i],'.png')
png(nome,height=500,width=700)
par(mfrow=c(1,1),mar=c(4,4,1,1))
plot(NA,NA,xlim=range(fim1a$d.edge),
ylim=c(0,max(fim1a$q99.14)),
ylab='',xlab='',cex.axis=3)
points(res$d.edge,res$q99.14,col='grey',pch=19)
for (j in 1:length(trat)){
cond=res$fire.treat==trat[j]
res1=res[cond,]
if (i==j) {
points(res1$d.edge,res1$q99.14,col='black',cex=2,pch=19)
lines(res1$d.edge,res1$q99.14s,col='black',lwd=3)
}
if (i!=j) lines(res1$d.edge,res1$q99.14s,col='grey',lwd=2)
}
dev.off()
}
3715/23
rm(list=ls())
library('data.table')
library('lidR')
library('foreign')
setwd('U:\\independent studies\\LIDAR\\GIS TAN\\topography')
topo=read.dbf('topography.dbf')
hist(topo$topography)
cond=topo$topography>50; mean(cond)
topo1=topo[cond,]; range(topo1$topography)
dt1 <- data.table(X = topo1$X,  Y = topo1$Y, ground = topo1$topography, key = "X,Y")
setwd('U:\\independent studies\\LIDAR\\tanguro\\TAN_A01_2018_LiDAR')
nomes.arq=list.files()
ind=grep('TAN',nomes.arq)
nomes.arq=nomes.arq[ind]
bin.size=50
ooo=1
print(ooo)
setwd('U:\\independent studies\\LIDAR\\tanguro\\TAN_A01_2018_LiDAR')
las = readLAS(nomes.arq[ooo])
# str(las@data)
# plot(las)
rangox=range(las@data$X); diff(rangox)
rangoy=range(las@data$Y); diff(rangoy)
rangoz=range(las@data$Z); diff(rangoz)
#get nice multiples of binsize for x and y
rangox[1]=floor(rangox[1]/bin.size)*bin.size
rangox[2]=ceiling(rangox[2]/bin.size)*bin.size
rangoy[1]=floor(rangoy[1]/bin.size)*bin.size
rangoy[2]=ceiling(rangoy[2]/bin.size)*bin.size
#get xnew
seq.x=seq(from=rangox[1],to=rangox[2],by=bin.size)
diff1=(seq.x[2]-seq.x[1])/2
mid.x=seq.x[-length(seq.x)]+diff1
tmp=as.numeric(cut(las@data$X,breaks=seq.x))
las@data$X=mid.x[tmp]
#get ynew
seq.y=seq(from=rangoy[1],to=rangoy[2],by=bin.size)
diff1=(seq.y[2]-seq.y[1])/2
mid.y=seq.y[-length(seq.y)]+diff1
tmp=as.numeric(cut(las@data$Y,breaks=seq.y))
las@data$Y=mid.y[tmp]
#combine data using data.table
cond=!(is.na(las@data$X) | is.na(las@data$Y) | is.na(las@data$Z)) &
las@data$ReturnNumber==1
dt2 <- data.table(X = las@data$X[cond],
Y = las@data$Y[cond],
Z = las@data$Z[cond], key = "X,Y")
#check if something is funny with coordinates
X=sort(unique(dt2$X)); nx=unique(diff(X))
Y=sort(unique(dt2$X)); ny=unique(diff(Y))
print(c(nx,ny))
dat2=merge(dt1, dt2)
dat2$Z=dat2$Z-dat2$ground
#how many points
# dat2$denis=1
# tmp=aggregate(denis~X+Y,data=dat2,sum)
# hist(tmp$denis)
rm(las)
gc()
#make sure z is always equal or greater than zero
# hist(las@data$Z)
# range(las@data$Z,na.rm=T)
# mean(is.na(las@data$Z)) #proportion of missing z
cond=dat2$Z < 0; mean(cond)
dat2$Z[cond]=0
# hist(las@data$Z)
dat2$denis=1
tmp=aggregate(denis~X+Y,data=dat2,sum)
hist(tmp$denis)
tmp
quantile(tmp$denis,c(0.9,0.95,0.99))
mean(tmp$denis<80000)
80000/2500
mean(tmp$denis>80000)
mean(tmp$denis>40000)
mean(tmp$denis>30000)
25000/2500
mean(tmp$denis>25000)
str(las)
setwd('U:\\independent studies\\LIDAR\\tanguro\\TAN_A01_2018_LiDAR')
las = readLAS(nomes.arq[ooo])
str(las)
summary(las)
30*2500
mean(tmp$denis>75000)
dim(las)
head(las)
nrow(las)
length(las@data$X)
8116920/250444.3
rm(list=ls())
library('data.table')
library('lidR')
library('foreign')
setwd('U:\\independent studies\\LIDAR\\GIS TAN\\topography')
topo=read.dbf('topography.dbf')
hist(topo$topography)
cond=topo$topography>50; mean(cond)
topo1=topo[cond,]; range(topo1$topography)
dt1 <- data.table(X = topo1$X,  Y = topo1$Y, ground = topo1$topography, key = "X,Y")
setwd('U:\\independent studies\\LIDAR\\tanguro\\TAN_A01_2018_LiDAR')
nomes.arq=list.files()
ind=grep('TAN',nomes.arq)
nomes.arq=nomes.arq[ind]
bin.size=50
for (ooo in 1:length(nomes.arq)){
print(ooo)
setwd('U:\\independent studies\\LIDAR\\tanguro\\TAN_A01_2018_LiDAR')
las = readLAS(nomes.arq[ooo])
# str(las@data)
# plot(las)
rangox=range(las@data$X); diff(rangox)
rangoy=range(las@data$Y); diff(rangoy)
rangoz=range(las@data$Z); diff(rangoz)
#get nice multiples of binsize for x and y
rangox[1]=floor(rangox[1]/bin.size)*bin.size
rangox[2]=ceiling(rangox[2]/bin.size)*bin.size
rangoy[1]=floor(rangoy[1]/bin.size)*bin.size
rangoy[2]=ceiling(rangoy[2]/bin.size)*bin.size
#get xnew
seq.x=seq(from=rangox[1],to=rangox[2],by=bin.size)
diff1=(seq.x[2]-seq.x[1])/2
mid.x=seq.x[-length(seq.x)]+diff1
tmp=as.numeric(cut(las@data$X,breaks=seq.x))
las@data$X=mid.x[tmp]
#get ynew
seq.y=seq(from=rangoy[1],to=rangoy[2],by=bin.size)
diff1=(seq.y[2]-seq.y[1])/2
mid.y=seq.y[-length(seq.y)]+diff1
tmp=as.numeric(cut(las@data$Y,breaks=seq.y))
las@data$Y=mid.y[tmp]
#combine data using data.table
cond=!(is.na(las@data$X) | is.na(las@data$Y) | is.na(las@data$Z)) &
las@data$ReturnNumber==1
dt2 <- data.table(X = las@data$X[cond],
Y = las@data$Y[cond],
Z = las@data$Z[cond], key = "X,Y")
#check if something is funny with coordinates
X=sort(unique(dt2$X)); nx=unique(diff(X))
Y=sort(unique(dt2$X)); ny=unique(diff(Y))
print(c(nx,ny))
dat2=merge(dt1, dt2)
dat2$Z=dat2$Z-dat2$ground
#how many points
# dat2$denis=1
# tmp=aggregate(denis~X+Y,data=dat2,sum)
# quantile(tmp$denis,c(0.9,0.95,0.99))
# mean(tmp$denis>25000)
# hist(tmp$denis)
rm(las)
gc()
#make sure z is always equal or greater than zero
# hist(las@data$Z)
# range(las@data$Z,na.rm=T)
# mean(is.na(las@data$Z)) #proportion of missing z
cond=dat2$Z < 0; mean(cond)
dat2$Z[cond]=0
# hist(las@data$Z)
#thin the data to 25,000 observations in each grid cell
nobs=25000
coord=unique(dat2[,c('X','Y')])
ncoord=nrow(coord)
res=matrix(NA,ncoord,5)
for (i in 1:ncoord){
cond=dat2$X==coord$X[i] & dat2$Y==coord$Y[i]
dat3=dat2[cond,]
ind=sample(1:sum(cond),size=min(sum(cond),nobs))
dat4=dat3[ind,]
res[i,]=c(coord$X[i],coord$Y[i],median(dat4$Z),quantile(dat4$Z,0.99),nrow(dat4))
}
colnames(res)=c('X','Y','median','q99','nobs')
# table(res[,'nobs'])
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM\\2018 edited data')
nome1=nomes.arq[ooo]
nome2=gsub('.laz','.csv',nome1)
write.csv(res,nome2,row.names=F)
}
ooo=1
print(ooo)
setwd('U:\\independent studies\\LIDAR\\tanguro\\TAN_A01_2018_LiDAR')
las = readLAS(nomes.arq[ooo])
# str(las@data)
# plot(las)
rangox=range(las@data$X); diff(rangox)
rangoy=range(las@data$Y); diff(rangoy)
rangoz=range(las@data$Z); diff(rangoz)
#get nice multiples of binsize for x and y
rangox[1]=floor(rangox[1]/bin.size)*bin.size
rangox[2]=ceiling(rangox[2]/bin.size)*bin.size
rangoy[1]=floor(rangoy[1]/bin.size)*bin.size
rangoy[2]=ceiling(rangoy[2]/bin.size)*bin.size
#get xnew
seq.x=seq(from=rangox[1],to=rangox[2],by=bin.size)
diff1=(seq.x[2]-seq.x[1])/2
mid.x=seq.x[-length(seq.x)]+diff1
tmp=as.numeric(cut(las@data$X,breaks=seq.x))
las@data$X=mid.x[tmp]
#get ynew
seq.y=seq(from=rangoy[1],to=rangoy[2],by=bin.size)
diff1=(seq.y[2]-seq.y[1])/2
mid.y=seq.y[-length(seq.y)]+diff1
tmp=as.numeric(cut(las@data$Y,breaks=seq.y))
las@data$Y=mid.y[tmp]
#combine data using data.table
cond=!(is.na(las@data$X) | is.na(las@data$Y) | is.na(las@data$Z)) &
las@data$ReturnNumber==1
dt2 <- data.table(X = las@data$X[cond],
Y = las@data$Y[cond],
Z = las@data$Z[cond], key = "X,Y")
#check if something is funny with coordinates
X=sort(unique(dt2$X)); nx=unique(diff(X))
Y=sort(unique(dt2$X)); ny=unique(diff(Y))
print(c(nx,ny))
dat2=merge(dt1, dt2)
dat2$Z=dat2$Z-dat2$ground
dat2$denis=1
tmp=aggregate(denis~X+Y,data=dat2,sum)
mean(tmp$denis>25000)
summary(las)
rm(list=ls())
library('data.table')
library('lidR')
library('foreign')
setwd('U:\\independent studies\\LIDAR\\GIS TAN\\topography')
topo=read.dbf('topography.dbf')
hist(topo$topography)
cond=topo$topography>50; mean(cond)
topo1=topo[cond,]; range(topo1$topography)
dt1 <- data.table(X = topo1$X,  Y = topo1$Y, ground = topo1$topography, key = "X,Y")
setwd('U:\\independent studies\\LIDAR\\tanguro\\TAN_A01_2018_LiDAR')
nomes.arq=list.files()
ind=grep('TAN',nomes.arq)
nomes.arq=nomes.arq[ind]
bin.size=50
for (ooo in 1:length(nomes.arq)){
print(ooo)
setwd('U:\\independent studies\\LIDAR\\tanguro\\TAN_A01_2018_LiDAR')
las = readLAS(nomes.arq[ooo])
# str(las@data)
# plot(las)
rangox=range(las@data$X); diff(rangox)
rangoy=range(las@data$Y); diff(rangoy)
rangoz=range(las@data$Z); diff(rangoz)
#get nice multiples of binsize for x and y
rangox[1]=floor(rangox[1]/bin.size)*bin.size
rangox[2]=ceiling(rangox[2]/bin.size)*bin.size
rangoy[1]=floor(rangoy[1]/bin.size)*bin.size
rangoy[2]=ceiling(rangoy[2]/bin.size)*bin.size
#get xnew
seq.x=seq(from=rangox[1],to=rangox[2],by=bin.size)
diff1=(seq.x[2]-seq.x[1])/2
mid.x=seq.x[-length(seq.x)]+diff1
tmp=as.numeric(cut(las@data$X,breaks=seq.x))
las@data$X=mid.x[tmp]
#get ynew
seq.y=seq(from=rangoy[1],to=rangoy[2],by=bin.size)
diff1=(seq.y[2]-seq.y[1])/2
mid.y=seq.y[-length(seq.y)]+diff1
tmp=as.numeric(cut(las@data$Y,breaks=seq.y))
las@data$Y=mid.y[tmp]
#combine data using data.table
cond=!(is.na(las@data$X) | is.na(las@data$Y) | is.na(las@data$Z)) &
las@data$ReturnNumber==1
dt2 <- data.table(X = las@data$X[cond],
Y = las@data$Y[cond],
Z = las@data$Z[cond], key = "X,Y")
#check if something is funny with coordinates
X=sort(unique(dt2$X)); nx=unique(diff(X))
Y=sort(unique(dt2$X)); ny=unique(diff(Y))
print(c(nx,ny))
dat2=merge(dt1, dt2)
dat2$Z=dat2$Z-dat2$ground
#how many points?
# dat2$denis=1
# tmp=aggregate(denis~X+Y,data=dat2,sum)
# quantile(tmp$denis,c(0.9,0.95,0.99))
# mean(tmp$denis>25000) #86%
# hist(tmp$denis)
#although the density is 29.38 points/m2 (summary(las))
#the density of first returns is smaller.
#above I found that 86% of the gridcells have more than 25,000 first returns
rm(las)
gc()
#make sure z is always equal or greater than zero
# hist(las@data$Z)
# range(las@data$Z,na.rm=T)
# mean(is.na(las@data$Z)) #proportion of missing z
cond=dat2$Z < 0; mean(cond)
dat2$Z[cond]=0
# hist(las@data$Z)
#thin the data to 25,000 observations in each grid cell
nobs=25000
coord=unique(dat2[,c('X','Y')])
ncoord=nrow(coord)
res=matrix(NA,ncoord,5)
for (i in 1:ncoord){
cond=dat2$X==coord$X[i] & dat2$Y==coord$Y[i]
dat3=dat2[cond,]
ind=sample(1:sum(cond),size=min(sum(cond),nobs))
dat4=dat3[ind,]
res[i,]=c(coord$X[i],coord$Y[i],median(dat4$Z),quantile(dat4$Z,0.99),nrow(dat4))
}
colnames(res)=c('X','Y','median','q99','nobs')
# table(res[,'nobs'])
setwd('U:\\independent studies\\LIDAR Tanguro\\CHM\\2018 edited data')
nome1=nomes.arq[ooo]
nome2=gsub('.laz','.csv',nome1)
write.csv(res,nome2,row.names=F)
}
